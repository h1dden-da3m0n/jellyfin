name: 'ðŸ”¬ Run SonarScan'

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /o:"h1dden-da3m0n" `
            /k:"h1dden-da3m0n_jellyfin" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx `
            /d:sonar.cs.opencover.reportsPaths=TestResults/*/coverage.opencover.xml `
            /d:sonar.coverage.exclusions="**Test*.cs"
          
          foreach ($testProj in Get-ChildItem -Path "./tests/" -Recurse -Filter "*Tests.csproj") {
            dotnet test $testProj.FullName `
              --configuration Release `
              --collect:"XPlat Code Coverage" `
              --results-directory TestResults/ `
              --settings tests/coverletArgs.runsettings `
              --logger "trx;LogFileName=test-results.trx" `
              --verbosity minimal `
              --nologo `
              -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          }
          
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
